rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Funciones auxiliares
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Reglas para la colección de usuarios
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAdmin();
    }
    
    // Reglas para la colección de preguntas
    match /questions/{questionId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Reglas para la colección de tests
    match /tests/{testId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Reglas para la colección de resultados
    match /results/{resultId} {
      allow read: if isAuthenticated() && 
        (request.auth.uid == resource.data.userId || isAdmin());
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAdmin();
    }
    
    // Reglas para la colección de planes
    match /plans/{planId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Reglas para la colección de códigos de descuento
    match /discountCodes/{codeId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}
