rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isVerifiedUser() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    function isValidReport() {
      let incomingData = request.resource.data;
      return incomingData.userId == request.auth.uid &&
             incomingData.type is string &&
             incomingData.description is string &&
             incomingData.status == 'pending' &&
             incomingData.createdAt is timestamp &&
             incomingData.updatedAt is timestamp;
    }

    // Reports rules
    match /reports/{reportId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
      allow create: if isVerifiedUser() && isValidReport();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // User rules
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
    }

    // Plans rules
    match /plans/{planId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Test blocks rules
    match /testBlocks/{blockId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Tests rules
    match /tests/{testId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (
        resource.data.createdBy == request.auth.uid || isAdmin()
      );
    }

    // Test results rules
    match /testResults/{resultId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || isAdmin()
      );
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
    }
  }
}
